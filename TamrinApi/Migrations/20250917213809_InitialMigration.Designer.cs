// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TamrinApi.DatabaseConnection;

#nullable disable

namespace TamrinApi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250917213809_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TamrinApi.Models.Book", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("auther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("availabaleCopies")
                        .HasColumnType("bigint");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("publishedYear")
                        .HasColumnType("bigint");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("totalCopies")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("TamrinApi.Models.Borrowing", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("bookid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("borrowDate")
                        .HasColumnType("date");

                    b.Property<Guid>("memberid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("returnDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("shouldReturnDate")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("memberid");

                    b.ToTable("Borrowings");
                });

            modelBuilder.Entity("TamrinApi.Models.Member", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ActiveBook")
                        .HasColumnType("bigint");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("expiryDate")
                        .HasColumnType("date");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("joinDate")
                        .HasColumnType("date");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TamrinApi.Models.Borrowing", b =>
                {
                    b.HasOne("TamrinApi.Models.Member", null)
                        .WithMany("Borrows")
                        .HasForeignKey("memberid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TamrinApi.Models.Member", b =>
                {
                    b.Navigation("Borrows");
                });
#pragma warning restore 612, 618
        }
    }
}
